---
- name: Install | Hacking for get kubeadm related images
  command: sh -c "which kubeadm; kubeadm config images list; kubeadm config images pull"

- name: Install | Hacking for get all pkgs
  command: sh -c "rm -rf /root/debs/;rm -f /root/debstar.tar.gz; mkdir -p /root/debs && find /var/cache | grep deb$ |  xargs -I % cp % /root/debs/ && cd /root && tar czf debstar.tar.gz debs"

- name: Install | Hacking for get all dockerimages
  command: sh -c "docker save $(docker images -q) -o /var/lib/docker/combine.tar"
  #raw: sudo docker images | sed -n '1!p' | awk {'print $1":"$2'} | tr '\n' ' ' | xargs -I % sudo docker save -o /var/lib/docker/combine.tar %
#  command: sh -c "docker save -o /root/combine.tar gcr.io/google-containers/kube-proxy:v1.15.3 k8s.gcr.io/kube-proxy:v1.15.3 k8s.gcr.io/kube-apiserver:v1.15.3 gcr.io/google-containers/kube-apiserver:v1.15.3 gcr.io/google-containers/kube-controller-manager:v1.15.3 k8s.gcr.io/kube-controller-manager:v1.15.3 gcr.io/google-containers/kube-scheduler:v1.15.3 k8s.gcr.io/kube-scheduler:v1.15.3 coredns/coredns:1.6.0 calico/node:v3.7.3 calico/cni:v3.7.3 calico/kube-controllers:v3.7.3 k8s.gcr.io/k8s-dns-node-cache:1.15.4 nginx:1.15 k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.6.0 quay.io/external_storage/local-volume-provisioner:v2.3.2 k8s.gcr.io/coredns:1.3.1 gcr.io/google_containers/kubernetes-dashboard-amd64:v1.10.1 k8s.gcr.io/etcd:3.3.10 rancher/local-path-provisioner:v0.0.2 quay.io/coreos/etcd:v3.3.10 gcr.io/google_containers/pause-amd64:3.1 k8s.gcr.io/pause:3.1 gcr.io/google-containers/pause:3.1 quay.io/l23network/k8s-netchecker-agent:v1.0 quay.io/l23network/k8s-netchecker-server:v1.0"

- name: Install | Copy etcdctl binary from docker container
  #command: sh -c "apt-get install -y wget; wget 150.95.156.85:9999/etcdctl; mv etcdctl /usr/local/bin/etcdctl; chmod 777 /usr/local/bin/etcdctl"
  command: sh -c "docker info; {{ docker_bin_dir }}/docker rm -f etcdctl-binarycopy;
           {{ docker_bin_dir }}/docker create --name etcdctl-binarycopy {{ etcd_image_repo }}:{{ etcd_image_tag }} &&
           {{ docker_bin_dir }}/docker cp etcdctl-binarycopy:/usr/local/bin/etcdctl {{ bin_dir }}/etcdctl &&
           {{ docker_bin_dir }}/docker rm -f etcdctl-binarycopy"
  #command: sh -c "{{ docker_bin_dir }}/docker rm -f etcdctl-binarycopy;
  #         {{ docker_bin_dir }}/docker create --name etcdctl-binarycopy {{ etcd_image_repo }}:{{ etcd_image_tag }} &&
  #         {{ docker_bin_dir }}/docker cp etcdctl-binarycopy:/usr/local/bin/etcdctl {{ bin_dir }}/etcdctl &&
  #         {{ docker_bin_dir }}/docker rm -f etcdctl-binarycopy"
  register: etcd_task_result
  until: etcd_task_result.rc == 0
  retries: 5
  delay: "{{ retry_stagger | random + 3 }}"
  changed_when: false
  when: etcd_cluster_setup

- name: Install etcd launch script
  template:
    src: etcd.j2
    dest: "{{ bin_dir }}/etcd"
    owner: 'root'
    mode: 0750
    backup: yes
  when: etcd_cluster_setup

- name: Install etcd-events launch script
  template:
    src: etcd-events.j2
    dest: "{{ bin_dir }}/etcd-events"
    owner: 'root'
    mode: 0750
    backup: yes
  when: etcd_events_cluster_setup
