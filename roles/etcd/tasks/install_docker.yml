---
- name: Install | Hacking for get kubeadm related images
  command: sh -c "which kubeadm; kubeadm config images list; kubeadm config images pull"

#- name: Install | Hacking for get all pkgs
#  command: sh -c "rm -rf /root/debs/;rm -f /root/debstar.tar.gz; mkdir -p /root/debs && find /var/cache | grep deb$ |  xargs -I % cp % /root/debs/ && cd /root && tar czf debstar.tar.gz debs"

- name: Install | Hacking for get all dockerimages
  command: sh -c "sudo docker images | sed -n '1!p' | awk {'print $1\":\"$2'} | tr '\n' ' ' | xargs -I % sudo docker save -o /var/lib/docker/combine.tar %"

- name: Install | Copy etcdctl binary from docker container
  command: sh -c "docker info; {{ docker_bin_dir }}/docker rm -f etcdctl-binarycopy;
           {{ docker_bin_dir }}/docker create --name etcdctl-binarycopy {{ etcd_image_repo }}:{{ etcd_image_tag }} &&
           {{ docker_bin_dir }}/docker cp etcdctl-binarycopy:/usr/local/bin/etcdctl {{ bin_dir }}/etcdctl &&
           {{ docker_bin_dir }}/docker rm -f etcdctl-binarycopy"
  register: etcd_task_result
  until: etcd_task_result.rc == 0
  retries: 5
  delay: "{{ retry_stagger | random + 3 }}"
  changed_when: false
  when: etcd_cluster_setup

- name: Install etcd launch script
  template:
    src: etcd.j2
    dest: "{{ bin_dir }}/etcd"
    owner: 'root'
    mode: 0750
    backup: yes
  when: etcd_cluster_setup

- name: Install etcd-events launch script
  template:
    src: etcd-events.j2
    dest: "{{ bin_dir }}/etcd-events"
    owner: 'root'
    mode: 0750
    backup: yes
  when: etcd_events_cluster_setup
