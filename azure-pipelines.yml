# Using the GCC Template for deploying kubespray
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    free -m && df -h && cat /proc/cpuinfo
    #sudo dpkg -l
    sudo cat /etc/docker/docker.json
    sudo cat /etc/systemd/system/multi-user.target.wants/docker.service
    sudo dpkg -S /usr/bin/docker

    #*echo "##########################show dmesg ########################"
    #*dmesg
    #*echo "##########################END show dmesg ########################"
    #*ps -ef | grep docker
    #*sudo systemctl list-units | grep docker
    #*sudo systemctl list-units>units
    #*sudo cat units
    #*sudo file /usr/bin/docker
    #*echo "###################find usr docker ###################"
    #*sudo find /usr | grep docker
    #*echo "###################find etc docker ###################"
    #*sudo find /etc | grep docker
    #*which docker
    #*docker version
    #*sudo apt-get purge docker
    #*which docker
    #*sudo apt-get remove docker docker-engine docker.io containerd runc
    #*sudo apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
    #*curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    #*sudo apt-key fingerprint 0EBFCD88
    #*sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu    $(lsb_release -cs)    stable"
    #*sudo apt-get update
    #*sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    #*which docker
    #*docker version
    #*echo "##########Get docker version#########"
    #*sudo docker version
    #*sudo docker info
    #*sudo dpkg -l | grep docker
    #*sudo apt-get purge ansible
    #*sudo apt-get update -y
    #*sudo apt-get install -y python-pip
    #*pip install wheel
    #*echo "##########Install requirements#########"
    #*pip install -r requirements.txt
    #*echo "##########After Install requirements#########"
    #*export PATH=/home/vsts/.local/bin/:$PATH
    #*which ansible
    #*ansible --version
    #*which ping
    #*sudo apt-get install -y iputils-ping
    #*which ping
    #*ssh-keygen -f $HOME/.ssh/id_rsa -t rsa -N ''
    #*cd contrib/dind
    #*pip install -r requirements.txt
    #*pip3 install ruamel.yaml
    #*# Create the node containers
    #*ansible-playbook -i hosts dind-cluster.yaml
    #*cd ../../
    #*INVENTORY_DIR=inventory/local-dind
    #*mkdir -p ${INVENTORY_DIR}
    #*rm -f ${INVENTORY_DIR}/hosts.ini
    #*cat /tmp/kubespray.dind.inventory_builder.sh
    #*ls -l -h  /tmp/kubespray.dind.inventory_builder.sh
    #*sudo CONFIG_FILE=${INVENTORY_DIR}/hosts.yml /tmp/kubespray.dind.inventory_builder.sh
    #*cat ${INVENTORY_DIR}/hosts.yml
    #*sudo docker exec kube-node1 docker version
    #*#ansible-playbook --become -e ansible_ssh_user=debian -i ${INVENTORY_DIR}/hosts.yml cluster.yml --extra-vars @contrib/dind/kubespray-dind.yaml
    #*ansible-playbook --become -e ansible_ssh_user=ubuntu -i ${INVENTORY_DIR}/hosts.yml cluster.yml --extra-vars @contrib/dind/kubespray-dind.yaml
    #*sudo docker exec kube-node1 kubectl get node
    #*sudo docker exec kube-node1 kubectl get pod --all-namespaces
